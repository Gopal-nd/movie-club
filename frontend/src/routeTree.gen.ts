/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchlistRouteImport } from './routes/watchlist'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as MoviesRouteImport } from './routes/movies'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MoviesMovieIdRouteImport } from './routes/movies.$movieId'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'

const WatchlistRoute = WatchlistRouteImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const MoviesRoute = MoviesRouteImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MoviesMovieIdRoute = MoviesMovieIdRouteImport.update({
  id: '/$movieId',
  path: '/$movieId',
  getParentRoute: () => MoviesRoute,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/movies': typeof MoviesRouteWithChildren
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/watchlist': typeof WatchlistRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/movies/$movieId': typeof MoviesMovieIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/movies': typeof MoviesRouteWithChildren
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/watchlist': typeof WatchlistRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/movies/$movieId': typeof MoviesMovieIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/movies': typeof MoviesRouteWithChildren
  '/profile': typeof ProfileRoute
  '/register': typeof RegisterRoute
  '/watchlist': typeof WatchlistRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/movies/$movieId': typeof MoviesMovieIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/movies'
    | '/profile'
    | '/register'
    | '/watchlist'
    | '/demo/tanstack-query'
    | '/movies/$movieId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/movies'
    | '/profile'
    | '/register'
    | '/watchlist'
    | '/demo/tanstack-query'
    | '/movies/$movieId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/movies'
    | '/profile'
    | '/register'
    | '/watchlist'
    | '/demo/tanstack-query'
    | '/movies/$movieId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  MoviesRoute: typeof MoviesRouteWithChildren
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
  WatchlistRoute: typeof WatchlistRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watchlist': {
      id: '/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof WatchlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movies/$movieId': {
      id: '/movies/$movieId'
      path: '/$movieId'
      fullPath: '/movies/$movieId'
      preLoaderRoute: typeof MoviesMovieIdRouteImport
      parentRoute: typeof MoviesRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface MoviesRouteChildren {
  MoviesMovieIdRoute: typeof MoviesMovieIdRoute
}

const MoviesRouteChildren: MoviesRouteChildren = {
  MoviesMovieIdRoute: MoviesMovieIdRoute,
}

const MoviesRouteWithChildren =
  MoviesRoute._addFileChildren(MoviesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  MoviesRoute: MoviesRouteWithChildren,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
  WatchlistRoute: WatchlistRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
